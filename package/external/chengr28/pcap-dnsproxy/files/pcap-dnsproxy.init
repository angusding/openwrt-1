#!/bin/sh /etc/rc.common
# Copyright (C) 2015-2016 wongsyrone

. /lib/functions.sh

START=95

EXTRA_COMMANDS="status flush libver"
EXTRA_HELP=\
"	flush	Flush DNS cache stored in Pcap_DNSProxy and DNSMasq
	libver	Print library version Pcap_DNSProxy linked to
	status	Show the running status of Pcap_DNSProxy"

SERVICE_DAEMONIZE=1

PROG=/usr/sbin/Pcap_DNSProxy
CONFDIR=/etc/pcap-dnsproxy
ERRLOG=$CONFDIR/Error.log

config_load "pcap-dnsproxy"

parse_pcap_dnsproxy()
{
	config_get ENABLED "$section" "enabled"
}

config_foreach parse_pcap_dnsproxy 'pcap-dnsproxy'



start() {
	if [ "1" = "$ENABLED" -o "on" = "$ENABLED" -o "true" = "$ENABLED" ]; then
		[ $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ] && {
			echo "Pcap_DNSProxy is already running, no need to start again"
			exit 1
		}
		[ -f "$ERRLOG" ] && {
			echo "Removing previous ${ERRLOG##*/}"
			rm -f "$ERRLOG" >/dev/null 2>&1
		}
		# do NOT use daemon code inside pcap-dnsproxy, use start-stop-daemon instead
		service_start $PROG -c $CONFDIR --disable-daemon
		local RESULT=$?
		# wait to check error log file
		sleep 1s
		[ -f "$ERRLOG" ] && echo "WARNING: ${ERRLOG##*/} exists, check its content and other config files in ${CONFDIR}" || echo "Hooray! ${ERRLOG##*/} not found"
		[ $RESULT -eq 0 -a $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ] && {
			echo "Pcap_DNSProxy started successfully"
		}
	else
		echo "Pcap_DNSProxy is disabled, please check /etc/config/pcap-dnsproxy for more info"
	fi
}

stop() {
	# If you can NOT terminate Pcap_DNSProxy, try 'killall' instead.
	# e.g. killall -SIGTERM Pcap_DNSProxy
	if [ $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ]; then
		service_stop $PROG
		local RESULT=$?
		sleep 1s
		if [ $RESULT -eq 0 -a $(ps|grep ${PROG}|grep -v grep|wc -l) -eq 0 ]; then
			echo "Pcap_DNSProxy terminated successfully"
		else
			echo "Failed to terminate Pcap_DNSProxy"
			echo "Retry or use 'killall -SIG{TERM,KILL} Pcap_DNSProxy' instead"
		fi
	else
		echo "Pcap_DNSProxy is not running, no need to terminate"
	fi
}

restart() {
	stop
	sleep 5s
	start
}

flush() {
	if [ $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ]; then
		$PROG --flush-dns
	else
		echo "Pcap_DNSProxy is not running, I can NOT flush DNS cache for you."
		exit 1
	fi
}

libver() {
	$PROG --lib-version
}

status() {
	[ $(ps|grep ${PROG}|grep -v grep|wc -l) -ge 1 ] && echo "Pcap_DNSProxy is running, PID is $(pidof ${PROG##*/})" || echo "Pcap_DNSProxy is NOT running"
}
