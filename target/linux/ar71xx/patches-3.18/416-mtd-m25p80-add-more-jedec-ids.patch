--- a/drivers/mtd/devices/m25p80.c
+++ b/drivers/mtd/devices/m25p80.c
@@ -273,42 +273,48 @@ static const struct spi_device_id m25p_i
 	{"at25fs010"},	{"at25fs040"},	{"at25df041a"},	{"at25df321a"},
 	{"at25df641"},	{"at26f004"},	{"at26df081a"},	{"at26df161a"},
 	{"at26df321"},	{"at45db081d"},
-	{"en25f32"},	{"en25p32"},	{"en25q32b"},	{"en25p64"},
-	{"en25q64"},	{"en25qh128"},	{"en25qh256"},
-	{"f25l32pa"},
+	{"en25q80a"},	{"en25f80"},	{"en25q16"},	{"en25qh16"},
+	{"en25f32"},	{"en25p32"},	{"en25q32"},	{"en25qh32"},
+	{"en25p64"},	{"en25q64"},	{"en25qh64"},	{"en25q128"},
+	{"en25qh128"},	{"en25qh256"},
+	{"f25l08qa"},	{"f25l16pa"},	{"f25l32pa"},	{"f25l32qa"},
+	{"f25l64qa"},
 	{"mr25h256"},	{"mr25h10"},
-	{"gd25q32"},	{"gd25q64"},
+	{"gd25q80b"},	{"gd25q16b"},	{"gd25q32"},	{"gd25q64"},
+	{"gd25q128"},
 	{"160s33b"},	{"320s33b"},	{"640s33b"},
 	{"mx25l2005a"},	{"mx25l4005a"},	{"mx25l8005"},	{"mx25l1606e"},
-	{"mx25l3205d"},	{"mx25l3255e"},	{"mx25l6405d"},	{"mx25l12805d"},
-	{"mx25l12855e"},{"mx25l25635e"},{"mx25l25655e"},{"mx66l51235l"},
-	{"mx66l1g55g"},
-	{"n25q064"},	{"n25q128a11"},	{"n25q128a13"},	{"n25q256a"},
-	{"n25q512a"},	{"n25q512ax3"},	{"n25q00"},
-	{"pm25lv512"},	{"pm25lv010"},	{"pm25lq032"},
-	{"s25sl032p"},	{"s25sl064p"},	{"s25fl256s0"},	{"s25fl256s1"},
-	{"s25fl512s"},	{"s70fl01gs"},	{"s25sl12800"},	{"s25sl12801"},
-	{"s25fl129p0"},	{"s25fl129p1"},	{"s25sl004a"},	{"s25sl008a"},
-	{"s25sl016a"},	{"s25sl032a"},	{"s25sl064a"},	{"s25fl008k"},
-	{"s25fl016k"},	{"s25fl064k"},
-	{"sst25vf040b"},{"sst25vf080b"},{"sst25vf016b"},{"sst25vf032b"},
-	{"sst25vf064c"},{"sst25wf512"},	{"sst25wf010"},	{"sst25wf020"},
-	{"sst25wf040"},
+	{"mx25l3205d"},	{"mx25l3255e"},	{"mx25l6405d"},	{"mx25l6455e"},
+	{"mx25l12805d"},{"mx25l12855e"},{"mx25l25635e"},{"mx25l25655e"},
+	{"mx66l51235l"},{"mx66l1g54g"},	{"mx66l1g55g"},
 	{"m25p05"},	{"m25p10"},	{"m25p20"},	{"m25p40"},
 	{"m25p80"},	{"m25p16"},	{"m25p32"},	{"m25p64"},
-	{"m25p128"},	{"n25q032"},
+	{"m25p128"},	{"m25pe20"},	{"m25pe80"},	{"m25pe16"},
+	{"m25px80"},	{"m25px16"},	{"m25px32"},	{"m25px32-s0"},
+	{"m25px32-s1"},	{"m25px64"},
+	{"m45pe10"},	{"m45pe80"},	{"m45pe16"},
+	{"n25q032a"},	{"n25q064a"},	{"n25q128a11"},	{"n25q128a13"},
+	{"n25q256a"},	{"n25q512a"},	{"n25q512ax3"},	{"n25q00"},
+	{"pm25lq080"},	{"pm25lq016"},	{"pm25lq032"},
+	{"s25sl032p"},	{"s25sl064p"},	{"s25fl208k"},	{"s25fl216k"},
+	{"s25fl132k"},	{"s25fl032p"},	{"s25fl164k"},	{"s25fl256s0"},
+	{"s25fl256s1"},	{"s25fl512s"},	{"s70fl01gs"},	{"s25sl12800"},
+	{"s25sl12801"},	{"s25fl129p0"},	{"s25fl129p1"},	{"s25sl004a"},
+	{"s25sl008a"},	{"s25sl016a"},	{"s25sl032a"},	{"s25sl064a"},
+	{"s25fl008k"},
+	{"sst25vf040b"},{"sst25vf080b"},{"sst25vf016b"},{"sst26vf016"},
+	{"sst26vf016b"},{"sst25vf032b"},{"sst26vf032"},	{"sst26vf032b"},
+	{"sst25vf064c"},{"sst26vf064b"},{"sst25wf512"},	{"sst25wf010"},
+	{"sst25wf020"},	{"sst25wf040"},
 	{"m25p05-nonjedec"},	{"m25p10-nonjedec"},	{"m25p20-nonjedec"},
 	{"m25p40-nonjedec"},	{"m25p80-nonjedec"},	{"m25p16-nonjedec"},
 	{"m25p32-nonjedec"},	{"m25p64-nonjedec"},	{"m25p128-nonjedec"},
-	{"m45pe10"},	{"m45pe80"},	{"m45pe16"},
-	{"m25pe20"},	{"m25pe80"},	{"m25pe16"},
-	{"m25px16"},	{"m25px32"},	{"m25px32-s0"},	{"m25px32-s1"},
-	{"m25px64"},	{"m25px80"},
-	{"w25x10"},	{"w25x20"},	{"w25x40"},	{"w25x80"},
-	{"w25x16"},	{"w25x32"},	{"w25q32"},	{"w25q32dw"},
-	{"w25x64"},	{"w25q64"},	{"w25q80"},	{"w25q80bl"},
-	{"w25q128"},	{"w25q256"},	{"cat25c11"},
-	{"cat25c03"},	{"cat25c09"},	{"cat25c17"},	{"cat25128"},
+	{"w25x05"},	{"w25x10"},	{"w25x20"},	{"w25x40"},
+	{"w25x80"},	{"w25x16"},	{"w25q16"},	{"w25x32"},
+	{"w25q32"},	{"w25q32dw"},	{"w25x64"},	{"w25q64"},
+	{"w25q80"},	{"w25q80bl"},	{"w25q128"},	{"w25q256"},
+	{"cat25c11"},	{"cat25c03"},	{"cat25c09"},	{"cat25c17"},
+	{"cat25128"},
 	{ },
 };
 MODULE_DEVICE_TABLE(spi, m25p_ids);
--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -492,24 +492,38 @@ static const struct spi_device_id spi_no
 	{ "at45db081d", INFO(0x1f2500, 0, 64 * 1024, 16, SECT_4K) },
 
 	/* EON -- en25xxx */
+	{ "en25q80a",   INFO(0x1c3014, 0, 64 * 1024,  16, SECT_4K) },
+	{ "en25f80",    INFO(0x1c3114, 0, 64 * 1024,  16, SECT_4K) },
+	{ "en25q16",    INFO(0x1c3015, 0, 64 * 1024,  32, SECT_4K) },
+	{ "en25qh16",   INFO(0x1c7015, 0, 64 * 1024,  32, SECT_4K) },
 	{ "en25f32",    INFO(0x1c3116, 0, 64 * 1024,   64, SECT_4K) },
 	{ "en25p32",    INFO(0x1c2016, 0, 64 * 1024,   64, 0) },
-	{ "en25q32b",   INFO(0x1c3016, 0, 64 * 1024,   64, 0) },
+	{ "en25q32",    INFO(0x1c3016, 0, 64 * 1024,  64, SECT_4K) },
+	{ "en25qh32",   INFO(0x1c7016, 0, 64 * 1024,  64, SECT_4K) },
 	{ "en25p64",    INFO(0x1c2017, 0, 64 * 1024,  128, 0) },
 	{ "en25q64",    INFO(0x1c3017, 0, 64 * 1024,  128, SECT_4K) },
-	{ "en25qh128",  INFO(0x1c7018, 0, 64 * 1024,  256, 0) },
-	{ "en25qh256",  INFO(0x1c7019, 0, 64 * 1024,  512, 0) },
+	{ "en25qh64",   INFO(0x1c7017, 0, 64 * 1024, 128, SECT_4K) },
+	{ "en25q128",   INFO(0x1c3018, 0, 64 * 1024, 256, SECT_4K) },
+	{ "en25qh128",  INFO(0x1c7018, 0, 64 * 1024, 256, SECT_4K) },
+	{ "en25qh256",  INFO(0x1c7019, 0, 64 * 1024, 512, SECT_4K) },
 
 	/* ESMT */
+	{ "f25l08qa", INFO(0x8c4014, 0, 64 * 1024, 16, SECT_4K) },
+	{ "f25l16pa", INFO(0x8c2115, 0, 64 * 1024, 32, SECT_4K) },
 	{ "f25l32pa", INFO(0x8c2016, 0, 64 * 1024, 64, SECT_4K) },
+	{ "f25l32qa", INFO(0x8c4116, 0, 64 * 1024, 64, SECT_4K) },
+	{ "f25l64qa", INFO(0x8c4117, 0, 64 * 1024, 128, SECT_4K) },
 
 	/* Everspin */
 	{ "mr25h256", CAT25_INFO( 32 * 1024, 1, 256, 2, SPI_NOR_NO_ERASE | SPI_NOR_NO_FR) },
 	{ "mr25h10",  CAT25_INFO(128 * 1024, 1, 256, 3, SPI_NOR_NO_ERASE | SPI_NOR_NO_FR) },
 
 	/* GigaDevice */
+	{ "gd25q80b", INFO(0xc84014, 0, 64 * 1024,  16, SECT_4K) },
+	{ "gd25q16b", INFO(0xc84015, 0, 64 * 1024,  32, SECT_4K) },
 	{ "gd25q32", INFO(0xc84016, 0, 64 * 1024,  64, SECT_4K) },
 	{ "gd25q64", INFO(0xc84017, 0, 64 * 1024, 128, SECT_4K) },
+	{ "gd25q128", INFO(0xc84018, 0, 64 * 1024, 256, SECT_4K) },
 
 	/* Intel/Numonyx -- xxxs33b */
 	{ "160s33b",  INFO(0x898911, 0, 64 * 1024,  32, 0) },
@@ -519,30 +533,58 @@ static const struct spi_device_id spi_no
 	/* Macronix */
 	{ "mx25l2005a",  INFO(0xc22012, 0, 64 * 1024,   4, SECT_4K) },
 	{ "mx25l4005a",  INFO(0xc22013, 0, 64 * 1024,   8, SECT_4K) },
-	{ "mx25l8005",   INFO(0xc22014, 0, 64 * 1024,  16, 0) },
+	{ "mx25l8005",   INFO(0xc22014, 0, 64 * 1024,  16, SECT_4K) },
 	{ "mx25l1606e",  INFO(0xc22015, 0, 64 * 1024,  32, SECT_4K) },
-	{ "mx25l3205d",  INFO(0xc22016, 0, 64 * 1024,  64, 0) },
-	{ "mx25l3255e",  INFO(0xc29e16, 0, 64 * 1024,  64, SECT_4K) },
-	{ "mx25l6405d",  INFO(0xc22017, 0, 64 * 1024, 128, 0) },
-	{ "mx25l12805d", INFO(0xc22018, 0, 64 * 1024, 256, 0) },
-	{ "mx25l12855e", INFO(0xc22618, 0, 64 * 1024, 256, 0) },
-	{ "mx25l25635e", INFO(0xc22019, 0, 64 * 1024, 512, 0) },
-	{ "mx25l25655e", INFO(0xc22619, 0, 64 * 1024, 512, 0) },
-	{ "mx66l51235l", INFO(0xc2201a, 0, 64 * 1024, 1024, SPI_NOR_QUAD_READ) },
+	{ "mx25l3205d",  INFO(0xc22016, 0, 64 * 1024,  64, SECT_4K) },
+	{ "mx25l3255e",  INFO(0xc29316, 0, 64 * 1024,  64, SECT_4K) },
+	{ "mx25l6405d",  INFO(0xc22017, 0, 64 * 1024, 128, SECT_4K) },
+	{ "mx25l6455e",  INFO(0xc22617, 0, 64 * 1024, 128, SECT_4K) },
+	{ "mx25l12805d", INFO(0xc22018, 0, 64 * 1024, 256, SECT_4K) },
+	{ "mx25l12855e", INFO(0xc22618, 0, 64 * 1024, 256, SECT_4K) },
+	{ "mx25l25635e", INFO(0xc22019, 0, 64 * 1024, 512, SECT_4K) },
+	{ "mx25l25655e", INFO(0xc22619, 0, 64 * 1024, 512, SECT_4K) },
+	{ "mx66l51235l", INFO(0xc2201a, 0, 64 * 1024, 1024, SECT_4K) },
+	{ "mx66l1g54g",  INFO(0xc2201b, 0, 64 * 1024, 2048, SECT_4K) },
 	{ "mx66l1g55g",  INFO(0xc2261b, 0, 64 * 1024, 2048, SPI_NOR_QUAD_READ) },
 
 	/* Micron */
-	{ "n25q064",     INFO(0x20ba17, 0, 64 * 1024,  128, 0) },
-	{ "n25q128a11",  INFO(0x20bb18, 0, 64 * 1024,  256, 0) },
-	{ "n25q128a13",  INFO(0x20ba18, 0, 64 * 1024,  256, 0) },
+	{ "m25p05",      INFO(0x202010,  0,  32 * 1024,   2, 0) },
+	{ "m25p10",      INFO(0x202011,  0,  32 * 1024,   4, 0) },
+	{ "m25p20",      INFO(0x202012,  0,  64 * 1024,   4, 0) },
+	{ "m25p40",      INFO(0x202013,  0,  64 * 1024,   8, 0) },
+	{ "m25p80",      INFO(0x202014,  0,  64 * 1024,  16, 0) },
+	{ "m25p16",      INFO(0x202015,  0,  64 * 1024,  32, 0) },
+	{ "m25p32",      INFO(0x202016,  0,  64 * 1024,  64, 0) },
+	{ "m25p64",      INFO(0x202017,  0,  64 * 1024, 128, 0) },
+	{ "m25p128",     INFO(0x202018,  0, 256 * 1024,  64, 0) },
+
+	{ "m25pe20",     INFO(0x208012,  0, 64 * 1024,  4, SECT_4K) },
+	{ "m25pe80",     INFO(0x208014,  0, 64 * 1024, 16, SECT_4K) },
+	{ "m25pe16",     INFO(0x208015,  0, 64 * 1024, 32, SECT_4K) },
+
+	{ "m25px80",     INFO(0x207114,  0, 64 * 1024, 16, SECT_4K) },
+	{ "m25px16",     INFO(0x207115,  0, 64 * 1024, 32, SECT_4K) },
+	{ "m25px32",     INFO(0x207116,  0, 64 * 1024, 64, SECT_4K) },
+	{ "m25px32-s0",  INFO(0x207316,  0, 64 * 1024, 64, SECT_4K) },
+	{ "m25px32-s1",  INFO(0x206316,  0, 64 * 1024, 64, SECT_4K) },
+	{ "m25px64",     INFO(0x207117,  0, 64 * 1024, 128, SECT_4K) },
+
+	{ "m45pe10",     INFO(0x204011,  0, 64 * 1024,    2, SECT_4K) },
+	{ "m45pe80",     INFO(0x204014,  0, 64 * 1024,   16, SECT_4K) },
+	{ "m45pe16",     INFO(0x204015,  0, 64 * 1024,   32, SECT_4K) },
+
+	{ "n25q032a",    INFO(0x20ba16, 0, 64 * 1024,   64, SECT_4K) },
+	{ "n25q064a",    INFO(0x20ba17, 0, 64 * 1024,  128, SECT_4K) },
+	{ "n25q128a11",  INFO(0x20bb18, 0, 64 * 1024,  256, SECT_4K) },
+	{ "n25q128a13",  INFO(0x20ba18, 0, 64 * 1024,  256, SECT_4K) },
 	{ "n25q256a",    INFO(0x20ba19, 0, 64 * 1024,  512, SECT_4K) },
 	{ "n25q512a",    INFO(0x20bb20, 0, 64 * 1024, 1024, SECT_4K) },
 	{ "n25q512ax3",  INFO(0x20ba20, 0, 64 * 1024, 1024, USE_FSR) },
 	{ "n25q00",      INFO(0x20ba21, 0, 64 * 1024, 2048, USE_FSR) },
 
 	/* PMC */
-	{ "pm25lv512",   INFO(0,        0, 32 * 1024,    2, SECT_4K_PMC) },
-	{ "pm25lv010",   INFO(0,        0, 32 * 1024,    4, SECT_4K_PMC) },
+	{ "pm25lq080",   INFO(0x7f9d44, 0, 64 * 1024,  16, SECT_4K_PMC) },
+	{ "pm25lq016",   INFO(0x7f9d45, 0, 64 * 1024,  32, SECT_4K_PMC) },
 	{ "pm25lq032",   INFO(0x7f9d46, 0, 64 * 1024,   64, SECT_4K) },
 
 	/* Spansion -- single (large) sector size only, at least
@@ -550,6 +592,11 @@ static const struct spi_device_id spi_no
 	 */
 	{ "s25sl032p",  INFO(0x010215, 0x4d00,  64 * 1024,  64, SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ "s25sl064p",  INFO(0x010216, 0x4d00,  64 * 1024, 128, 0) },
+	{ "s25fl208k",  INFO(0x014014,      0,  64 * 1024,  16, SECT_4K) },
+	{ "s25fl216k",  INFO(0x014015,      0,  64 * 1024,  32, SECT_4K) },
+	{ "s25fl132k",  INFO(0x014016,      0,  64 * 1024,  64, SECT_4K) },
+	{ "s25fl032p",  INFO(0x010215, 0x4d00,  64 * 1024,  64, SECT_4K) },
+	{ "s25fl164k",  INFO(0x014017,      0,  64 * 1024, 128, SECT_4K) },
 	{ "s25fl256s0", INFO(0x010219, 0x4d00, 256 * 1024, 128, 0) },
 	{ "s25fl256s1", INFO(0x010219, 0x4d01,  64 * 1024, 512, SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
 	{ "s25fl512s",  INFO(0x010220, 0x4d00, 256 * 1024, 256, SPI_NOR_DUAL_READ | SPI_NOR_QUAD_READ) },
@@ -564,32 +611,24 @@ static const struct spi_device_id spi_no
 	{ "s25sl032a",  INFO(0x010215,      0,  64 * 1024,  64, 0) },
 	{ "s25sl064a",  INFO(0x010216,      0,  64 * 1024, 128, 0) },
 	{ "s25fl008k",  INFO(0xef4014,      0,  64 * 1024,  16, SECT_4K) },
-	{ "s25fl016k",  INFO(0xef4015,      0,  64 * 1024,  32, SECT_4K) },
-	{ "s25fl064k",  INFO(0xef4017,      0,  64 * 1024, 128, SECT_4K) },
 
 	/* SST -- large erase sizes are "overlays", "sectors" are 4K */
 	{ "sst25vf040b", INFO(0xbf258d, 0, 64 * 1024,  8, SECT_4K | SST_WRITE) },
 	{ "sst25vf080b", INFO(0xbf258e, 0, 64 * 1024, 16, SECT_4K | SST_WRITE) },
 	{ "sst25vf016b", INFO(0xbf2541, 0, 64 * 1024, 32, SECT_4K | SST_WRITE) },
+	{ "sst26vf016",  INFO(0xbf2601, 0, 64 * 1024, 32, SECT_4K | SST_WRITE) },
+	{ "sst26vf016b", INFO(0xbf2641, 0, 64 * 1024, 32, SECT_4K | SST_WRITE) },
 	{ "sst25vf032b", INFO(0xbf254a, 0, 64 * 1024, 64, SECT_4K | SST_WRITE) },
+	{ "sst26vf032",  INFO(0xbf2602, 0, 64 * 1024, 64, SECT_4K | SST_WRITE) },
+	{ "sst26vf032b", INFO(0xbf2642, 0, 64 * 1024, 64, SECT_4K | SST_WRITE) },
 	{ "sst25vf064c", INFO(0xbf254b, 0, 64 * 1024, 128, SECT_4K) },
+	{ "sst26vf064b", INFO(0xbf2643, 0, 64 * 1024, 128, SECT_4K) },
 	{ "sst25wf512",  INFO(0xbf2501, 0, 64 * 1024,  1, SECT_4K | SST_WRITE) },
 	{ "sst25wf010",  INFO(0xbf2502, 0, 64 * 1024,  2, SECT_4K | SST_WRITE) },
 	{ "sst25wf020",  INFO(0xbf2503, 0, 64 * 1024,  4, SECT_4K | SST_WRITE) },
 	{ "sst25wf040",  INFO(0xbf2504, 0, 64 * 1024,  8, SECT_4K | SST_WRITE) },
 
 	/* ST Microelectronics -- newer production may have feature updates */
-	{ "m25p05",  INFO(0x202010,  0,  32 * 1024,   2, 0) },
-	{ "m25p10",  INFO(0x202011,  0,  32 * 1024,   4, 0) },
-	{ "m25p20",  INFO(0x202012,  0,  64 * 1024,   4, 0) },
-	{ "m25p40",  INFO(0x202013,  0,  64 * 1024,   8, 0) },
-	{ "m25p80",  INFO(0x202014,  0,  64 * 1024,  16, 0) },
-	{ "m25p16",  INFO(0x202015,  0,  64 * 1024,  32, 0) },
-	{ "m25p32",  INFO(0x202016,  0,  64 * 1024,  64, 0) },
-	{ "m25p64",  INFO(0x202017,  0,  64 * 1024, 128, 0) },
-	{ "m25p128", INFO(0x202018,  0, 256 * 1024,  64, 0) },
-	{ "n25q032", INFO(0x20ba16,  0,  64 * 1024,  64, 0) },
-
 	{ "m25p05-nonjedec",  INFO(0, 0,  32 * 1024,   2, 0) },
 	{ "m25p10-nonjedec",  INFO(0, 0,  32 * 1024,   4, 0) },
 	{ "m25p20-nonjedec",  INFO(0, 0,  64 * 1024,   4, 0) },
@@ -600,21 +639,6 @@ static const struct spi_device_id spi_no
 	{ "m25p64-nonjedec",  INFO(0, 0,  64 * 1024, 128, 0) },
 	{ "m25p128-nonjedec", INFO(0, 0, 256 * 1024,  64, 0) },
 
-	{ "m45pe10", INFO(0x204011,  0, 64 * 1024,    2, 0) },
-	{ "m45pe80", INFO(0x204014,  0, 64 * 1024,   16, 0) },
-	{ "m45pe16", INFO(0x204015,  0, 64 * 1024,   32, 0) },
-
-	{ "m25pe20", INFO(0x208012,  0, 64 * 1024,  4,       0) },
-	{ "m25pe80", INFO(0x208014,  0, 64 * 1024, 16,       0) },
-	{ "m25pe16", INFO(0x208015,  0, 64 * 1024, 32, SECT_4K) },
-
-	{ "m25px16",    INFO(0x207115,  0, 64 * 1024, 32, SECT_4K) },
-	{ "m25px32",    INFO(0x207116,  0, 64 * 1024, 64, SECT_4K) },
-	{ "m25px32-s0", INFO(0x207316,  0, 64 * 1024, 64, SECT_4K) },
-	{ "m25px32-s1", INFO(0x206316,  0, 64 * 1024, 64, SECT_4K) },
-	{ "m25px64",    INFO(0x207117,  0, 64 * 1024, 128, 0) },
-	{ "m25px80",    INFO(0x207114,  0, 64 * 1024, 16, 0) },
-
 	/* Winbond -- w25x "blocks" are 64K, "sectors" are 4KiB */
 	{ "w25x05", INFO(0xef3010, 0, 64 * 1024,  1,  SECT_4K) },
 	{ "w25x10", INFO(0xef3011, 0, 64 * 1024,  2,  SECT_4K) },
@@ -622,6 +646,7 @@ static const struct spi_device_id spi_no
 	{ "w25x40", INFO(0xef3013, 0, 64 * 1024,  8,  SECT_4K) },
 	{ "w25x80", INFO(0xef3014, 0, 64 * 1024,  16, SECT_4K) },
 	{ "w25x16", INFO(0xef3015, 0, 64 * 1024,  32, SECT_4K) },
+	{ "w25q16", INFO(0xef4015, 0, 64 * 1024,  32, SECT_4K) },
 	{ "w25x32", INFO(0xef3016, 0, 64 * 1024,  64, SECT_4K) },
 	{ "w25q32", INFO(0xef4016, 0, 64 * 1024,  64, SECT_4K) },
 	{ "w25q32dw", INFO(0xef6016, 0, 64 * 1024,  64, SECT_4K) },
